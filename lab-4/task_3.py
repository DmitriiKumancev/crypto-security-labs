"""
алгоритм Полларда Rho для факторизации целого числа n.

Функции:
---------
1. gcd(a, b):
    вычисляет наибольший общий делитель (НОД) двух целых чисел a и b, используя алгоритм Евклида.
    - Параметры:
        - `a`: Первое целое число.
        - `b`: Второе целое число.
    - Возвращает:
        - Наибольший общий делитель чисел a и b.

2. f(x, n):
    задает функцию f(x) = (x^2 + 1) % n.
    - Параметры:
        - `x`: Входное целое число.
        - `n`: Модуль для операции по модулю.
    - Возвращает:
        - Значение функции f(x) по модулю n.

3. pollards_rho(n):
    применяет алгоритм Полларда Rho для факторизации целого числа n.
    - Параметры:
        - `n`: Целое число, которое требуется факторизовать.
    - Возвращает:
        - Нетривиальный делитель числа n, если таковой был найден. В противном случае возвращает None.

"""

import math
import random 

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def f(x, n):
    return (x*x + 1) % n

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = 2
    y = 2
    d = 1
    
    while d == 1:
        x = f(x, n)
        y = f(f(y, n), n)
        d = gcd(abs(x-y), n)

    if d == n:
        return None  
    return d


n = 10967535067
factor = pollards_rho(n)
if factor is not None:
    print(f"The factor of {n} is {factor}")
else:
    print(f"Failed to find a factor for {n}") # The factor of 10967535067 is 104729